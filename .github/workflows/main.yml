# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: HashiCorp - Setup Terraform
        # You may pin to the exact commit or the version.
        # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: latest
      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.KV_NAME }}
          secrets: 'container-name, resource-group-name, storage-account-name, subscription-id'  # comma separated list of secret keys that need to be fetched from the Key Vault 
        id: kvAction

      - name: do terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VARS_container_name: ${{ steps.kvAction.outputs.container-name }}
          TF_VARS_resource_group_name: ${{ steps.kvAction.outputs.resource-group-name }}
          TF_VARS_storage_account_name: ${{ steps.kvAction.outputs.storage-account-name }}
          TF_VARS_subscription_id: ${{ steps.kvAction.outputs.subscription_id }}
          TF_VARS_key: $GITHUB_REPOSITORY.tfstate
        run: |
            echo "starting..."
            cp event-api/local.settings.json.sample event-api/local.settings.json
            cp frontend-api/local.settings.json.sample frontend-api/local.settings.json
            cd terraform
            ./env_setup.sh
            terraform init --backend-config=backend.tfvars
            terraform plan

